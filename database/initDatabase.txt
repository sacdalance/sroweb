CREATE TABLE role (
    role_id SERIAL PRIMARY KEY,
    role_name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE accoun (
    account_id SERIAL PRIMARY KEY,
    account_name VARCHAR(255) NOT NULL UNIQUE,
    email VARCHAR(255) NOT NULL UNIQUE CHECK (email LIKE '%@up.edu.ph'),
    role_id INT NOT NULL REFERENCES role (role_id) ON DELETE RESTRICT,
    created_at TIMESTAMP DEFAULT now() NOT NULL
);

CREATE TABLE organization (
    org_id SERIAL PRIMARY KEY,
    org_name VARCHAR(255) NOT NULL UNIQUE,
    org_email VARCHAR(255) NOT NULL UNIQUE CHECK (org_email LIKE '%@gmail.com'),
    description TEXT,
    adviser_name VARCHAR(255) NOT NULL,
    adviser_contact VARCHAR(255) NOT NULL
);

CREATE TABLE activity_category (
    category_id SERIAL PRIMARY KEY,
    category_code CHAR(1) NOT NULL UNIQUE,
    category_name VARCHAR(100) NOT NULL
);

CREATE TABLE activity (
    activity_id SERIAL PRIMARY KEY,
    account_id INT NOT NULL REFERENCES account(account_id) ON DELETE CASCADE,
    org_id INT NOT NULL REFERENCES organization(org_id) ON DELETE CASCADE,
    student_position VARCHAR(255) NOT NULL,
    activity_name VARCHAR(255) NOT NULL,
    activity_description TEXT NOT NULL,
    category_id INT NOT NULL REFERENCES activity_category(category_id) ON  DELETE RESTRICT,
    sdg_goals TEXT NOT NULL,
    charge_fee BOOLEAN NOT NULL DEFAULT FALSE,
    university_partner BOOLEAN NOT NULL DEFAULT FALSE,
    partner_name TEXT NOT NULL,
    partner_role TEXT NOT NULL,
    venue VARCHAR(255) NOT NULL,
    venue_approver VARCHAR(255) NOT NULL,
    venue_approver_contact VARCHAR(255) NOT NULL,
    is_off_campus BOOLEAN NOT NULL DEFAULT FALSE,
    green_monitor_name VARCHAR(255) NOT NULL,
    green_monitor_contact VARCHAR(255) NOT NULL,
    drive_folder_id VARCHAR(255) NOT NULL UNIQUE,
    drive_folder_link TEXT GENERATED ALWAYS AS ('https://drive.google.com/drive/folders/' || drive_folder_id) STORED,
    sro_approval_status VARCHAR(50) NOT NULL DEFAULT 'Pending',
    odsa_approval_status VARCHAR(50) NOT NULL DEFAULT 'Pending',
    final_status VARCHAR(50) NOT NULL DEFAULT 'Pending',
    sro_remarks TEXT,
    odsa_remarks TEXT
);

CREATE TABLE activity_schedule (
    schedule_id SERIAL PRIMARY KEY,
    activity_id INT NOT NULL REFERENCES activity(activity_id) ON DELETE CASCADE,
    is_recurring BOOLEAN NOT NULL DEFAULT FALSE,
    start_date DATE NOT NULL,
    end_date DATE,
    start_time TIME NOT NULL,
    end_time TIME NOT NULL,
    recurring_days TEXT
);

CREATE TABLE change_request (
    request_id SERIAL PRIMARY KEY,
    activity_id INT REFERENCES activity(activity_id) ON DELETE CASCADE,
    submitted_by INT REFERENCES account(account_id) ON DELETE SET NULL,
    request_type VARCHAR(50),
    new_start_date DATE,
    new_end_date DATE,
    new_start_time TIME,
    new_end_time TIME,
    new_venue VARCHAR(255),
    venue_approver_name VARCHAR(100),
    venue_approver_contact VARCHAR(100),
    submission_file_url TEXT,
    sro_approval_status VARCHAR(10) DEFAULT 'Pending',
    sro_remarks TEXT,
    submitted_at TIMESTAMP DEFAULT now()
);

CREATE TABLE org_annual_report (
    report_id SERIAL PRIMARY KEY,
    org_id INT REFERENCES organization(org_id) ON DELETE CASCADE,
    submitted_by INT REFERENCES account(account_id) ON DELETE SET NULL,
    academic_year VARCHAR(9),
    drive_folder_id VARCHAR(100) UNIQUE,
    submission_file_url TEXT,
    submitted_at TIMESTAMP DEFAULT now()
);

CREATE TABLE interview_slots (
    slot_id SERIAL PRIMARY KEY,
    academic_year VARCHAR(9) NOT NULL CHECK (academic_year ~ '^[0-9]{4}-[0-9]{4}$'),
    interview_date DATE NOT NULL,
    interview_time TIME NOT NULL,
    is_booked BOOLEAN DEFAULT FALSE NOT NULL
);

CREATE TABLE org_recognition (
    recognition_id SERIAL PRIMARY KEY,
    organization_id INT NOT NULL REFERENCES organization(org_id) ON DELETE CASCADE,
    submitted_by INT NOT NULL REFERENCES account(account_id) ON DELETE SET NULL,
    academic_year VARCHAR(9) NOT NULL CHECK (academic_year ~ '^[0-9]{4}-[0-9]{4}$'),
    drive_folder_id VARCHAR(100) UNIQUE NOT NULL,
    submission_file_url TEXT NOT NULL,
    interview_slot_id INT UNIQUE NOT NULL REFERENCES interview_slots(slot_id) ON DELETE RESTRICT,
    submitted_at TIMESTAMP DEFAULT now() NOT NULL
);

CREATE TABLE logs (
    log_id SERIAL PRIMARY KEY,
    account_id INT NOT NULL REFERENCES account(account_id) ON DELETE CASCADE,
    action VARCHAR(255) NOT NULL,
    timestamp TIMESTAMP DEFAULT now() NOT NULL
);